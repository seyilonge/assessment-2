{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\projects\\\\assessment-2\\\\lib\\\\redux.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport initializeStore from '../redux/store';\nimport App from 'next/app';\nexport var withRedux = function withRedux(PageComponent) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$ssr = _ref.ssr,\n      ssr = _ref$ssr === void 0 ? true : _ref$ssr;\n\n  var WithRedux = function WithRedux(_ref2) {\n    var initialReduxState = _ref2.initialReduxState,\n        props = _objectWithoutProperties(_ref2, [\"initialReduxState\"]);\n\n    var store = getOrInitializeStore(initialReduxState);\n    return __jsx(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, __jsx(PageComponent, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    })));\n  }; // Make sure people don't use this HOC on _app.js level\n\n\n  if (process.env.NODE_ENV !== 'production') {\n    var isAppHoc = PageComponent === App || PageComponent.prototype instanceof App;\n\n    if (isAppHoc) {\n      throw new Error('The withRedux HOC only works with PageComponents');\n    }\n  } // Set the correct displayName in development\n\n\n  if (process.env.NODE_ENV !== 'production') {\n    var displayName = PageComponent.displayName || PageComponent.name || 'Component';\n    WithRedux.displayName = \"withRedux(\".concat(displayName, \")\");\n  }\n\n  if (ssr || PageComponent.getInitialProps) {\n    WithRedux.getInitialProps =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(context) {\n        var reduxStore, pageProps;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // Get or Create the store with `undefined` as initialState\n                // This allows you to set a custom default initialState\n                reduxStore = getOrInitializeStore(); // Provide the store to getInitialProps of pages\n\n                context.reduxStore = reduxStore; // Run getInitialProps from HOCed PageComponent\n\n                if (!(typeof PageComponent.getInitialProps === 'function')) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 5;\n                return PageComponent.getInitialProps(context);\n\n              case 5:\n                _context.t0 = _context.sent;\n                _context.next = 9;\n                break;\n\n              case 8:\n                _context.t0 = {};\n\n              case 9:\n                pageProps = _context.t0;\n                return _context.abrupt(\"return\", _objectSpread({}, pageProps, {\n                  initialReduxState: reduxStore.getState()\n                }));\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n  }\n\n  return WithRedux;\n};\nvar reduxStore;\n\nvar getOrInitializeStore = function getOrInitializeStore(initialState) {\n  // Always make a new store if server, otherwise state is shared between requests\n  if (false) {\n    return initializeStore(initialState);\n  } // Create store if unavailable on the client and set it on the window object\n\n\n  if (!reduxStore) {\n    reduxStore = initializeStore(initialState);\n  }\n\n  return reduxStore;\n};","map":{"version":3,"sources":["C:/projects/assessment-2/lib/redux.js"],"names":["React","Provider","initializeStore","App","withRedux","PageComponent","ssr","WithRedux","initialReduxState","props","store","getOrInitializeStore","process","env","NODE_ENV","isAppHoc","prototype","Error","displayName","name","getInitialProps","context","reduxStore","pageProps","getState","initialState"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,eAAP,MAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,UAAhB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAEC,aAAF,EAA0C;AAAA,iFAAR,EAAQ;AAAA,sBAAvBC,GAAuB;AAAA,MAAvBA,GAAuB,yBAAjB,IAAiB;;AAC/D,MAAMC,SAAS,GAAG,SAAZA,SAAY,QAAuC;AAAA,QAAnCC,iBAAmC,SAAnCA,iBAAmC;AAAA,QAAbC,KAAa;;AACrD,QAAMC,KAAK,GAAGC,oBAAoB,CAAEH,iBAAF,CAAlC;AACA,WACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,aAAD,eAAmBD,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,CADJ;AAKH,GAPD,CAD+D,CAU/D;;;AACA,MAAKG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA9B,EAA6C;AACzC,QAAMC,QAAQ,GAAGV,aAAa,KAAKF,GAAlB,IAAyBE,aAAa,CAACW,SAAd,YAAmCb,GAA7E;;AACA,QAAKY,QAAL,EAAgB;AACZ,YAAM,IAAIE,KAAJ,CAAW,kDAAX,CAAN;AACH;AACJ,GAhB8D,CAkB/D;;;AACA,MAAKL,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA9B,EAA6C;AACzC,QAAMI,WAAW,GAAGb,aAAa,CAACa,WAAd,IAA6Bb,aAAa,CAACc,IAA3C,IAAmD,WAAvE;AACAZ,IAAAA,SAAS,CAACW,WAAV,uBAAqCA,WAArC;AACH;;AAED,MAAKZ,GAAG,IAAID,aAAa,CAACe,eAA1B,EAA4C;AACxCb,IAAAA,SAAS,CAACa,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA4B,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACxB;AACA;AACMC,gBAAAA,UAHkB,GAGLX,oBAAoB,EAHf,EAKxB;;AACAU,gBAAAA,OAAO,CAACC,UAAR,GAAqBA,UAArB,CANwB,CAQxB;;AARwB,sBASN,OAAOjB,aAAa,CAACe,eAArB,KAAyC,UATnC;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAUZf,aAAa,CAACe,eAAd,CAA+BC,OAA/B,CAVY;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,8BAWlB,EAXkB;;AAAA;AASlBE,gBAAAA,SATkB;AAAA,mEAejBA,SAfiB;AAgBpBf,kBAAAA,iBAAiB,EAAEc,UAAU,CAACE,QAAX;AAhBC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA5B;;AAAA;AAAA;AAAA;AAAA;AAmBH;;AAED,SAAOjB,SAAP;AACH,CA/CM;AAiDP,IAAIe,UAAJ;;AACA,IAAMX,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAc,YAAY,EAAI;AACzC;AACA,aAAqC;AACjC,WAAOvB,eAAe,CAAEuB,YAAF,CAAtB;AACH,GAJwC,CAMzC;;;AACA,MAAK,CAACH,UAAN,EAAmB;AACfA,IAAAA,UAAU,GAAGpB,eAAe,CAAEuB,YAAF,CAA5B;AACH;;AAED,SAAOH,UAAP;AACH,CAZD","sourcesContent":["import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport initializeStore from '../redux/store';\r\nimport App from 'next/app';\r\n\r\nexport const withRedux = ( PageComponent, { ssr = true } = {} ) => {\r\n    const WithRedux = ( { initialReduxState, ...props } ) => {\r\n        const store = getOrInitializeStore( initialReduxState );\r\n        return (\r\n            <Provider store={store}>\r\n                <PageComponent {...props} />\r\n            </Provider>\r\n        );\r\n    };\r\n\r\n    // Make sure people don't use this HOC on _app.js level\r\n    if ( process.env.NODE_ENV !== 'production' ) {\r\n        const isAppHoc = PageComponent === App || PageComponent.prototype instanceof App;\r\n        if ( isAppHoc ) {\r\n            throw new Error( 'The withRedux HOC only works with PageComponents' );\r\n        }\r\n    }\r\n\r\n    // Set the correct displayName in development\r\n    if ( process.env.NODE_ENV !== 'production' ) {\r\n        const displayName = PageComponent.displayName || PageComponent.name || 'Component';\r\n        WithRedux.displayName = `withRedux(${displayName})`;\r\n    }\r\n\r\n    if ( ssr || PageComponent.getInitialProps ) {\r\n        WithRedux.getInitialProps = async context => {\r\n            // Get or Create the store with `undefined` as initialState\r\n            // This allows you to set a custom default initialState\r\n            const reduxStore = getOrInitializeStore();\r\n\r\n            // Provide the store to getInitialProps of pages\r\n            context.reduxStore = reduxStore;\r\n\r\n            // Run getInitialProps from HOCed PageComponent\r\n            const pageProps = typeof PageComponent.getInitialProps === 'function'\r\n                ? await PageComponent.getInitialProps( context )\r\n                : {};\r\n\r\n            // Pass props to PageComponent\r\n            return {\r\n                ...pageProps,\r\n                initialReduxState: reduxStore.getState()\r\n            };\r\n        }\r\n    }\r\n\r\n    return WithRedux;\r\n};\r\n\r\nlet reduxStore;\r\nconst getOrInitializeStore = initialState => {\r\n    // Always make a new store if server, otherwise state is shared between requests\r\n    if ( typeof window === 'undefined' ) {\r\n        return initializeStore( initialState );\r\n    }\r\n\r\n    // Create store if unavailable on the client and set it on the window object\r\n    if ( !reduxStore ) {\r\n        reduxStore = initializeStore( initialState );\r\n    }\r\n\r\n    return reduxStore;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}